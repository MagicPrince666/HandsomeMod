/*
 * Copyright (C) 2016 James Pettigrew <james@innovum.com.au>
 *
 * This file is dual-licensed: you can use it either under the terms
 * of the GPL or the X11 license, at your option. Note that this dual
 * licensing only applies to this file, and not this project as a
 * whole.
 *
 *  a) This file is free software; you can redistribute it and/or
 *     modify it under the terms of the GNU General Public License as
 *     published by the Free Software Foundation; either version 2 of the
 *     License, or (at your option) any later version.
 *
 *     This file is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 * Or, alternatively,
 *
 *  b) Permission is hereby granted, free of charge, to any person
 *     obtaining a copy of this software and associated documentation
 *     files (the "Software"), to deal in the Software without
 *     restriction, including without limitation the rights to use,
 *     copy, modify, merge, publish, distribute, sublicense, and/or
 *     sell copies of the Software, and to permit persons to whom the
 *     Software is furnished to do so, subject to the following
 *     conditions:
 *
 *     The above copyright notice and this permission notice shall be
 *     included in all copies or substantial portions of the Software.
 *
 *     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 *     EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 *     OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 *     NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 *     HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 *     WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 *     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 *     OTHER DEALINGS IN THE SOFTWARE.
 */

#include "sun8i-h3-nanopi.dtsi"

#include <dt-bindings/pwm/pwm.h>
#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/input/input.h>

/ {
	model = "Cputools Cbox";
	compatible = "cputools,cbox", "allwinner,sun8i-h3";

	aliases {
		serial0 = &uart1;
		serial1 = &uart0;
		spi0 = &spi0;
	};

	chosen {
		stdout-path = "serial0:115200n8";
		/delete-node/ framebuffer@0;
	};

	leds {
		compatible = "gpio-leds";

		status {
			label = "nanopi:blue:status";
			gpios = <&pio 0 10 GPIO_ACTIVE_HIGH>;
			linux,default-trigger = "heartbeat";
		};

		pwr {
			label = "nanopi:green:pwr";
			gpios = <&r_pio 0 10 GPIO_ACTIVE_HIGH>;
			default-state = "on";
			linux,default-trigger = "timer";
		};
	};

	srf04@0 {
		compatible = "devantech,srf04";
		trig-gpios = <&pio 0 2 GPIO_ACTIVE_HIGH>; // PA2
		echo-gpios = <&r_pio 0 11 GPIO_ACTIVE_HIGH>; // PL11
		status = "okay";
	};

	backlight: backlight {
		compatible = "gpio-backlight";
		pinctrl-names = "default";
		pinctrl-0 = <&backlight_pins>;

		brightness-levels = <0 20 40 60 80 100>;
		default-brightness-level = <0>;

		gpios = <&pio 6 9 GPIO_ACTIVE_HIGH>; // PG9
		default-on;
		status = "okay";
	};
};

&uart0 {
	pinctrl-names = "default";
	pinctrl-0 = <&uart0_pins_pa>;
	status = "okay";
};

&pwm {
	pinctrl-names = "default";
	pinctrl-0 = <&pwm0_pins_pa>;
	status = "disabled";
};

&uart1 {
	pinctrl-names = "default";
	pinctrl-0 = <&uart1_pins_pa>;
	status = "okay";
};

&mmc0 {
	pinctrl-0 = <&mmc0_pins_pa>;
	pinctrl-names = "default";
	bus-width = <4>;
	cd-gpios = <&pio 5 6 GPIO_ACTIVE_LOW>;
	status = "okay";
	vmmc-supply = <&reg_vcc3v3>;
};

&ehci0 {
	status = "okay";
};

&ehci1 {
	status = "okay";
};

&ehci2 {
	status = "okay";
};

&spi0 {
	#address-cells = <1>;
	#size-cells = <0>;
    pinctrl-names = "default";
    pinctrl-0 = <&spi0_pins &spi0_pins_cs1>;
	spi-num-chipselects = <2>;
	cs-gpios = <&pio 2 3 GPIO_ACTIVE_HIGH>, <&pio 0 3 GPIO_ACTIVE_HIGH>;
    status = "okay";

	ili9341@0 {
		compatible = "ilitek,ili9341";
		reg = <0>;
		status = "okay";
		spi-max-frequency = <50000000>;
		rotate = <270>;
		bgr;
		fps = <30>;
		buswidth = <8>;
		reset-gpios = <&pio 6 8 GPIO_ACTIVE_LOW>; //PG8
		dc-gpios = <&pio 0 1 GPIO_ACTIVE_HIGH>;//PA1
		debug = <0>;
		backlight = <&backlight>;
	};

	tsc2046@1 {
		reg = <1>;	/* CS1 */
		compatible = "ti,tsc2046";
		pinctrl-names = "default";
		pinctrl-0 = <&t_irq>;
		interrupt-parent = <&pio>;
		interrupts = <0 6 IRQ_TYPE_EDGE_FALLING>;	//PA6
		spi-max-frequency = <2000000>;
		pendown-gpio = <&pio 0 6 GPIO_ACTIVE_HIGH>;
		vcc-supply = <&reg_vcc3v3>;

		ti,x-min = /bits/ 16 <0>;
		ti,x-max = /bits/ 16 <320>;
		ti,y-min = /bits/ 16 <0>;
		ti,y-max = /bits/ 16 <240>;
		ti,x-plate-ohms = /bits/ 16 <40>;
		ti,pressure-max = /bits/ 16 <255>;

		wakeup-source;
		status = "okay";
	};
};

&emac {
	phy-handle = <&int_mii_phy>;
	phy-mode = "mii";
	allwinner,leds-active-low;
	local-mac-address = [a4 51 29 00 00 0c];
	status = "okay";
};

&ohci0 {
	status = "okay";
};

&ohci1 {
	status = "okay";
};

&ohci2 {
	status = "okay";
};

&usb_otg {
	status = "okay";
	dr_mode = "peripheral";
};

&usbphy {
	usb0_id_det-gpios = <&pio 6 12 GPIO_ACTIVE_HIGH>; /* PG12 */
};

&rtc {
	status = "okay";
};

&pio {
	uart0_pins_pa: uart0-pa-pins {
		pins = "PA4", "PA5";
		function = "uart0";
	};

	uart1_pins_pa: uart1-pins {
		pins = "PG6", "PG7";
		function = "uart1";
	};

	mmc0_pins_pa: mmc0-pins {
		pins = "PF0", "PF1", "PF2", "PF3",
				"PF4", "PF5";
		function = "mmc0";
		drive-strength = <30>;
		bias-pull-up;
	};

	spi0_pins: spi0-pins {
		pins = "PC0", "PC1", "PC2", "PC3";
		function = "spi0";
   	};

	spi0_pins_cs1: spi0_pins_cs1 {
		pins = "PC3", "PA3";
		function = "gpio_out";
	};

	pwm0_pins_pa: pwm0 {
        pins = "PA5";
        function = "pwm0";
		drive-strength = <30>;
	};

	backlight_pins: backlight-pins {
		pins = "PG9";
		function = "gpio_out";
		drive-strength = <30>;
	};

	i2c0_pins: i2c0-pins {
		pins = "PA11", "PA12";
		function = "i2c0";
		bias-pull-up;
	};

	t_irq: t_irq-pins {
		pins = "PA6";
		function = "gpio_in";
	};
};

&codec {
	allwinner,audio-routing =
		"Line Out", "LINEOUT",
		"MIC1", "Mic",
		"Mic",  "MBIAS";
	status = "okay";
};

&mali {
    status = "okay";
};

&ion {
    status = "okay";
};

&ccu {
	status = "okay";
};

&i2c0 {
	status = "okay";
	pinctrl-names = "default";
    pinctrl-0 = <&i2c0_pins>;

	mpu6050@68 {
		compatible = "invensense,mpu6050";
		reg = <0x68>;
		status = "disabled";
		interrupt-parent = <&pio>;
		interrupts = <0 0 IRQ_TYPE_EDGE_RISING>; //PA0
		orientation = <0xff 0 0 0 1 0 0 0 0xff>;
	};

	mpu9250: imu@68 {
		compatible = "invensense,mpu9250";
		reg = <0x68>;
		status = "okay";
		i2c-gate {
			#address-cells = <1>;
			#size-cells = <0>;
			ax8975@c {
				compatible = "ak,ak8975";
				reg = <0x0c>;
			};
		};
	};

	bmp280: pressure@76 {
		compatible = "bosch,bmp280";
		reg = <0x76>;
		status = "okay";
	};

	vl53l0x@29 {
		compatible = "st,vl53l0x";
		reg = <0x29>;
		interrupt-parent = <&pio>;
		interrupts = <6 11 IRQ_TYPE_EDGE_FALLING>; //PG11
		status = "okay";
	};
};
